{"ast":null,"code":"import * as actionType from '../actions/actionsTypes'; // import axios from '../../Axios-instance'\n\nimport { updateObj } from '../../shared/Utility';\nconst initialstate = {\n  ingredients: null,\n  TotalPrice: 4,\n  error: false,\n  building: false\n};\nconst INITIAL_PRICE = {\n  salad: 1,\n  meat: 3,\n  cheese: 2,\n  bacon: 2\n};\n\nconst reducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case actionType.ADD_INGREDIENTS:\n      return updateObj(state, {\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        TotalPrice: state.TotalPrice + INITIAL_PRICE[action.ingredientName],\n        building: true\n      });\n\n    case actionType.REMOVE_INGREDIENTS:\n      return updateObj(state, {\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n          error: null,\n          building: true\n        },\n        TotalPrice: state.TotalPrice - INITIAL_PRICE[action.ingredientName]\n      });\n\n    case actionType.SET_INGREDIENTS:\n      return updateObj(state, {\n        ingredients: action.ingredients,\n        error: false,\n        building: false,\n        TotalPrice: 4.00\n      });\n\n    case actionType.SET_ERROR:\n      return updateObj(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/shubham/Documents/assignments/React_Project/Burger_Builder/src/store/reducers/BurgerBuilder.js"],"names":["actionType","updateObj","initialstate","ingredients","TotalPrice","error","building","INITIAL_PRICE","salad","meat","cheese","bacon","reducer","state","action","type","ADD_INGREDIENTS","ingredientName","REMOVE_INGREDIENTS","SET_INGREDIENTS","SET_ERROR"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,yBAA5B,C,CACA;;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE,KAHU;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;AAOA,MAAMC,aAAa,GAAG;AAElBC,EAAAA,KAAK,EAAE,CAFW;AAGlBC,EAAAA,IAAI,EAAE,CAHY;AAIlBC,EAAAA,MAAM,EAAE,CAJU;AAKlBC,EAAAA,KAAK,EAAE;AALW,CAAtB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAE9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMf,UAAU,CAACgB,eAAjB;AACI,aAAOf,SAAS,CACZY,KADY,EAEZ;AACIV,QAAAA,WAAW,EAAE,EACT,GAAGU,KAAK,CAACV,WADA;AAET,WAACW,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACG,cAAzB,IAA2C;AAF3D,SADjB;AAKIb,QAAAA,UAAU,EAAES,KAAK,CAACT,UAAN,GAAmBG,aAAa,CAACO,MAAM,CAACG,cAAR,CALhD;AAMIX,QAAAA,QAAQ,EAAE;AANd,OAFY,CAAhB;;AAWJ,SAAMN,UAAU,CAACkB,kBAAjB;AACI,aAAOjB,SAAS,CACZY,KADY,EAEZ;AACIV,QAAAA,WAAW,EAAE,EACT,GAAGU,KAAK,CAACV,WADA;AAET,WAACW,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACG,cAAzB,IAA2C,CAF3D;AAGTZ,UAAAA,KAAK,EAAE,IAHE;AAITC,UAAAA,QAAQ,EAAE;AAJD,SADjB;AAOIF,QAAAA,UAAU,EAAES,KAAK,CAACT,UAAN,GAAmBG,aAAa,CAACO,MAAM,CAACG,cAAR;AAPhD,OAFY,CAAhB;;AAeJ,SAAMjB,UAAU,CAACmB,eAAjB;AACI,aAAOlB,SAAS,CACZY,KADY,EAEZ;AACIV,QAAAA,WAAW,EAAEW,MAAM,CAACX,WADxB;AAEIE,QAAAA,KAAK,EAAE,KAFX;AAGIC,QAAAA,QAAQ,EAAE,KAHd;AAIIF,QAAAA,UAAU,EAAE;AAJhB,OAFY,CAAhB;;AASJ,SAAMJ,UAAU,CAACoB,SAAjB;AACI,aAAOnB,SAAS,CACZY,KADY,EAEZ;AACIR,QAAAA,KAAK,EAAE;AADX,OAFY,CAAhB;;AAMJ;AACI,aAAOQ,KAAP;AA/CR;AAiDH,CAnDD;;AAsDA,eAAeD,OAAf","sourcesContent":["import * as actionType from '../actions/actionsTypes'\n// import axios from '../../Axios-instance'\nimport { updateObj } from '../../shared/Utility'\nconst initialstate = {\n    ingredients: null,\n    TotalPrice: 4,\n    error: false,\n    building: false\n}\n\nconst INITIAL_PRICE = {\n\n    salad: 1,\n    meat: 3,\n    cheese: 2,\n    bacon: 2\n}\nconst reducer = (state = initialstate, action) => {\n\n    switch (action.type) {\n        case (actionType.ADD_INGREDIENTS):\n            return updateObj(\n                state,\n                {\n                    ingredients: {\n                        ...state.ingredients,\n                        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                    },\n                    TotalPrice: state.TotalPrice + INITIAL_PRICE[action.ingredientName],\n                    building: true\n\n                })\n        case (actionType.REMOVE_INGREDIENTS):\n            return updateObj(\n                state,\n                {\n                    ingredients: {\n                        ...state.ingredients,\n                        [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n                        error: null,\n                        building: true\n                    },\n                    TotalPrice: state.TotalPrice - INITIAL_PRICE[action.ingredientName]\n\n\n\n                })\n\n        case (actionType.SET_INGREDIENTS):\n            return updateObj(\n                state,\n                {\n                    ingredients: action.ingredients,\n                    error: false,\n                    building: false,\n                    TotalPrice: 4.00\n                })\n\n        case (actionType.SET_ERROR):\n            return updateObj(\n                state,\n                {\n                    error: true\n                })\n\n        default:\n            return state\n    }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}