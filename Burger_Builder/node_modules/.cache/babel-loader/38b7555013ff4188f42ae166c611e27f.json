{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/assignments/React_Project/Burger_Builder/src/containers/BurgerBuilder/burgerbuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuiltControls/BuiltControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/ordersummary/ordersummary';\nimport axios from '../../Axios-instance';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport errorhandler from '../../hoc/errorhandler/errorhandling';\nimport { connect } from 'react-redux';\nimport * as actionType from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false,\n      loading: false\n    };\n\n    this.purchasehandler = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    };\n\n    this.purchasinghandle = () => {\n      if (this.props.isAuthenticated) {\n        console.log(\"authenitcated\");\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        console.log(\"not authenticated\");\n        this.props.history.push('/Auth');\n        this.props.authredirectpath('/checkout');\n        console.log(this.props.redirectedpath);\n      }\n    };\n\n    this.purchasingcontinue = () => {\n      //  alert('this has been saved to cloud')\n      const ingr = { ...this.props.ingredients\n      };\n      let query = [];\n\n      for (let i in ingr) {\n        query.push(encodeURIComponent(i) + '=' + encodeURIComponent(ingr[i]));\n      }\n\n      query.push('price=' + this.props.totalPrice);\n      let qstring = query.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + qstring\n      });\n    };\n\n    this.purchasingcancel = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.initIngredienthandler();\n  }\n\n  render() {\n    const disabledinfo = { ...this.props.ingredients\n    };\n    console.log(\"this is ingredientss\", this.props.ingredient);\n    let burger = this.props.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }\n    }, \"Something went wrong !!\") : /*#__PURE__*/React.createElement(Spinner, {\n      left: \"50%\",\n      top: \"100px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 74\n      }\n    });\n    let ordersummary;\n\n    if (this.props.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        adding: this.props.addingredientshandler,\n        removing: this.props.removeingredienthandler,\n        isAuth: this.props.isAuthenticated,\n        totalprice: this.props.TotalPrice,\n        disabledinfo: disabledinfo,\n        ispuchasable: this.purchasehandler(this.props.ingredients),\n        purchasing: this.purchasinghandle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }));\n      ordersummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.props.ingredients,\n        price: this.props.TotalPrice,\n        purchasingcancel: this.purchasingcancel,\n        purchasingcontinue: this.purchasingcontinue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      ordersummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 28\n        }\n      });\n    }\n\n    for (let i in disabledinfo) {\n      disabledinfo[i] = disabledinfo[i] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      purchasingcancel: this.purchasingcancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, ordersummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    TotalPrice: state.burgerBuilder.TotalPrice,\n    error: state.error,\n    redirectedpath: state.auth.authredirectpath,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addingredientshandler: ingname => dispatch(actionType.addIngredient(ingname)),\n    removeingredienthandler: ingname => dispatch(actionType.removeIngredient(ingname)),\n    initIngredienthandler: () => dispatch(actionType.initIngredients()),\n    authredirectpath: redirectpath => dispatch(actionType.authredirectpath(redirectpath))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(errorhandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/shubham/Documents/assignments/React_Project/Burger_Builder/src/containers/BurgerBuilder/burgerbuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","errorhandler","connect","actionType","BurgerBuilder","state","purchasing","loading","purchasehandler","ingredients","sum","Object","keys","map","igKey","reduce","el","purchasinghandle","props","isAuthenticated","console","log","setState","history","push","authredirectpath","redirectedpath","purchasingcontinue","ingr","query","i","encodeURIComponent","totalPrice","qstring","join","pathname","search","purchasingcancel","componentDidMount","initIngredienthandler","render","disabledinfo","ingredient","burger","error","ordersummary","addingredientshandler","removeingredienthandler","TotalPrice","mapStateToProps","burgerBuilder","auth","token","mapDispatchToProps","dispatch","ingname","addIngredient","removeIngredient","initIngredients","redirectpath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;;AACA,MAAMC,aAAN,SAA4BX,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCY,KAFkC,GAE1B;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAF0B;;AAAA,SAQlCC,eARkC,GAQfC,WAAD,IAAiB;AAC/B,YAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYH,WAAZ,EACPI,GADO,CACHC,KAAK,IAAI;AACV,eAAOL,WAAW,CAACK,KAAD,CAAlB;AACH,OAHO,EAIPC,MAJO,CAIA,CAACL,GAAD,EAAMM,EAAN,KAAa;AACjB,eAAON,GAAG,GAAGM,EAAb;AACH,OANO,EAML,CANK,CAAZ;AAOA,aAAON,GAAG,GAAG,CAAb;AACH,KAjBiC;;AAAA,SAoBlCO,gBApBkC,GAoBf,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,eAAf,EAAgC;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAKC,QAAL,CAAc;AAAEhB,UAAAA,UAAU,EAAE;AAAd,SAAd;AACH,OAHD,MAIK;AACDc,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,aAAKH,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACA,aAAKN,KAAL,CAAWO,gBAAX,CAA4B,WAA5B;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWQ,cAAvB;AACH;AACJ,KA/BiC;;AAAA,SAiClCC,kBAjCkC,GAiCb,MAAM;AACvB;AAEA,YAAMC,IAAI,GAAG,EAAE,GAAG,KAAKV,KAAL,CAAWT;AAAhB,OAAb;AACA,UAAIoB,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAT,IAAcF,IAAd,EAAoB;AAChBC,QAAAA,KAAK,CAACL,IAAN,CAAWO,kBAAkB,CAACD,CAAD,CAAlB,GAAwB,GAAxB,GAA8BC,kBAAkB,CAACH,IAAI,CAACE,CAAD,CAAL,CAA3D;AAEH;;AACDD,MAAAA,KAAK,CAACL,IAAN,CAAW,WAAW,KAAKN,KAAL,CAAWc,UAAjC;AACA,UAAIC,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAW,GAAX,CAAd;AACA,WAAKhB,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB;AACpBW,QAAAA,QAAQ,EAAE,WADU;AAEpBC,QAAAA,MAAM,EAAE,MAAMH;AAFM,OAAxB;AAIH,KAhDiC;;AAAA,SAkDlCI,gBAlDkC,GAkDf,MAAM;AAErB,WAAKf,QAAL,CAAc;AAAEhB,QAAAA,UAAU,EAAE;AAAd,OAAd;AAEH,KAtDiC;AAAA;;AAwDlCgC,EAAAA,iBAAiB,GAAG;AAChBlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,SAAKA,KAAL,CAAWqB,qBAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAG,EAAE,GAAG,KAAKvB,KAAL,CAAWT;AAAhB,KAArB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKH,KAAL,CAAWwB,UAA/C;AACA,QAAIC,MAAM,GAAG,KAAKzB,KAAL,CAAW0B,KAAX,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAnB,gBAAoD,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAG,KAAhB;AAAsB,MAAA,GAAG,EAAG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE;AACA,QAAIC,YAAJ;;AAEA,QAAI,KAAK3B,KAAL,CAAWT,WAAf,EAA4B;AACxBkC,MAAAA,MAAM,gBACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWT,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAE,KAAKS,KAAL,CAAW4B,qBAAlC;AACI,QAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAW6B,uBADzB;AAEI,QAAA,MAAM,EAAE,KAAK7B,KAAL,CAAWC,eAFvB;AAGI,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAW8B,UAH3B;AAII,QAAA,YAAY,EAAEP,YAJlB;AAKI,QAAA,YAAY,EAAE,KAAKjC,eAAL,CAAqB,KAAKU,KAAL,CAAWT,WAAhC,CALlB;AAMI,QAAA,UAAU,EAAE,KAAKQ,gBANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAYA4B,MAAAA,YAAY,gBAAI,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAK3B,KAAL,CAAWT,WAAtC;AACZ,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAW8B,UADN;AAEZ,QAAA,gBAAgB,EAAE,KAAKX,gBAFX;AAGZ,QAAA,kBAAkB,EAAE,KAAKV,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AAKH;;AAED,QAAI,KAAKtB,KAAL,CAAWE,OAAf,EAAwB;AACpBsC,MAAAA,YAAY,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH;;AACD,SAAK,IAAIf,CAAT,IAAcW,YAAd,EAA4B;AACxBA,MAAAA,YAAY,CAACX,CAAD,CAAZ,GAAkBW,YAAY,CAACX,CAAD,CAAZ,IAAmB,CAArC;AACH;;AACD,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWC,UAAxB;AACI,MAAA,gBAAgB,EAAE,KAAK+B,gBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKQ,YAFL,CADJ,EAKKF,MALL,CADJ;AASH;;AAtGiC;;AAwGtC,MAAMM,eAAe,GAAG5C,KAAK,IAAI;AAE7B,SAAO;AAEHI,IAAAA,WAAW,EAAEJ,KAAK,CAAC6C,aAAN,CAAoBzC,WAF9B;AAGHuC,IAAAA,UAAU,EAAE3C,KAAK,CAAC6C,aAAN,CAAoBF,UAH7B;AAIHJ,IAAAA,KAAK,EAAEvC,KAAK,CAACuC,KAJV;AAKHlB,IAAAA,cAAc,EAAGrB,KAAK,CAAC8C,IAAN,CAAW1B,gBALzB;AAMHN,IAAAA,eAAe,EAAEd,KAAK,CAAC8C,IAAN,CAAWC,KAAX,KAAqB;AANnC,GAAP;AASH,CAXD;;AAaA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHR,IAAAA,qBAAqB,EAAGS,OAAD,IAAaD,QAAQ,CAACnD,UAAU,CAACqD,aAAX,CAAyBD,OAAzB,CAAD,CADzC;AAEHR,IAAAA,uBAAuB,EAAGQ,OAAD,IAAaD,QAAQ,CAACnD,UAAU,CAACsD,gBAAX,CAA4BF,OAA5B,CAAD,CAF3C;AAGHhB,IAAAA,qBAAqB,EAAE,MAAMe,QAAQ,CAACnD,UAAU,CAACuD,eAAX,EAAD,CAHlC;AAIHjC,IAAAA,gBAAgB,EAAGkC,YAAD,IAAkBL,QAAQ,CAACnD,UAAU,CAACsB,gBAAX,CAA4BkC,YAA5B,CAAD;AAJzC,GAAP;AAMH,CAPD;;AAQA,eAAezD,OAAO,CAAC+C,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpD,YAAY,CAACG,aAAD,EAAgBL,KAAhB,CAAzD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/BuiltControls/BuiltControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/ordersummary/ordersummary'\nimport axios from '../../Axios-instance'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport errorhandler from '../../hoc/errorhandler/errorhandling'\nimport { connect } from 'react-redux'\nimport * as actionType from '../../store/actions/index'\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n        loading: false,\n    }\n\n\n    purchasehandler = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0\n    }\n\n\n    purchasinghandle = () => {\n        if (this.props.isAuthenticated) {\n            console.log(\"authenitcated\")\n            this.setState({ purchasing: true });\n        }\n        else {\n            console.log(\"not authenticated\")\n            this.props.history.push('/Auth')\n            this.props.authredirectpath('/checkout')\n            console.log(this.props.redirectedpath)\n        }\n    }\n\n    purchasingcontinue = () => {\n        //  alert('this has been saved to cloud')\n\n        const ingr = { ...this.props.ingredients }\n        let query = [];\n        for (let i in ingr) {\n            query.push(encodeURIComponent(i) + '=' + encodeURIComponent(ingr[i]))\n\n        }\n        query.push('price=' + this.props.totalPrice)\n        let qstring = query.join('&');\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + qstring\n        })\n    }\n\n    purchasingcancel = () => {\n\n        this.setState({ purchasing: false });\n\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n        this.props.initIngredienthandler()\n    }\n\n    render() {\n        const disabledinfo = { ...this.props.ingredients }\n        console.log(\"this is ingredientss\", this.props.ingredient)\n        let burger = this.props.error ? <p>Something went wrong !!</p> : <Spinner left = \"50%\" top = \"100px\"/>\n        let ordersummary;\n\n        if (this.props.ingredients) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ingredients} />\n                    <BuildControls adding={this.props.addingredientshandler}\n                        removing={this.props.removeingredienthandler}\n                        isAuth={this.props.isAuthenticated}\n                        totalprice={this.props.TotalPrice}\n                        disabledinfo={disabledinfo}\n                        ispuchasable={this.purchasehandler(this.props.ingredients)}\n                        purchasing={this.purchasinghandle} />\n                </Aux>)\n\n            ordersummary = (<OrderSummary ingredients={this.props.ingredients}\n                price={this.props.TotalPrice}\n                purchasingcancel={this.purchasingcancel}\n                purchasingcontinue={this.purchasingcontinue} />)\n\n        }\n\n        if (this.state.loading) {\n            ordersummary = <Spinner />\n        }\n        for (let i in disabledinfo) {\n            disabledinfo[i] = disabledinfo[i] <= 0\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing}\n                    purchasingcancel={this.purchasingcancel} >\n                    {ordersummary}\n                </Modal>\n                {burger}\n            </Aux>\n        )\n    }\n}\nconst mapStateToProps = state => {\n\n    return {\n\n        ingredients: state.burgerBuilder.ingredients,\n        TotalPrice: state.burgerBuilder.TotalPrice,\n        error: state.error,\n        redirectedpath : state.auth.authredirectpath,\n        isAuthenticated: state.auth.token !== null\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addingredientshandler: (ingname) => dispatch(actionType.addIngredient(ingname)),\n        removeingredienthandler: (ingname) => dispatch(actionType.removeIngredient(ingname)),\n        initIngredienthandler: () => dispatch(actionType.initIngredients()),\n        authredirectpath: (redirectpath) => dispatch(actionType.authredirectpath(redirectpath))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(errorhandler(BurgerBuilder, axios))"]},"metadata":{},"sourceType":"module"}