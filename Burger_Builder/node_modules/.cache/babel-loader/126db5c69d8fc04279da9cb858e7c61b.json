{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/assignments/React_Project/Burger_Builder/src/containers/OrderPage/OrderPage.js\";\nimport React, { Component } from 'react';\nimport Order from './Order/Order';\nimport axios from '../../Axios-instance';\nimport errorhandler from '../../hoc/errorhandler/errorhandling';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n  componentDidMount() {\n    console.log(\"this is userid =============================================================\", this.props.userId);\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    console.log(this.props.orders);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, this.props.orders.map(order => /*#__PURE__*/React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: order.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userid\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(errorhandler(Orders, axios));","map":{"version":3,"sources":["/home/shubham/Documents/assignments/React_Project/Burger_Builder/src/containers/OrderPage/OrderPage.js"],"names":["React","Component","Order","axios","errorhandler","connect","actions","Orders","componentDidMount","console","log","props","userId","onFetchOrders","token","render","orders","map","order","id","ingredients","price","mapStateToProps","state","loading","auth","userid","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAQ,KAAKC,OAAb,MAA0B,2BAA1B;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAE3BO,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8EAAZ,EAA6F,KAAKC,KAAL,CAAWC,MAAxG;AACA,SAAKD,KAAL,CAAWE,aAAX,CAAyB,KAAKF,KAAL,CAAWG,KAApC,EAA4C,KAAKH,KAAL,CAAWC,MAAvD;AACH;;AAEDG,EAAAA,MAAM,GAAI;AACNN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWK,MAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,iBACxB,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,MAAA,WAAW,EAAED,KAAK,CAACE,WAFvB;AAGI,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAUH;;AAnB0B;;AAqB/B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,MAAM,EAAEO,KAAK,CAACL,KAAN,CAAYF,MADjB;AAEHQ,IAAAA,OAAO,EAAED,KAAK,CAACL,KAAN,CAAYM,OAFlB;AAGFV,IAAAA,KAAK,EAAIS,KAAK,CAACE,IAAN,CAAWX,KAHlB;AAIFF,IAAAA,MAAM,EAAGW,KAAK,CAACE,IAAN,CAAWC;AAJlB,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,aAAa,EAAE,CAACC,KAAD,EAASF,MAAT,KAAqBgB,QAAQ,CAAEtB,OAAO,CAACuB,WAAR,CAAoBf,KAApB,EAA4BF,MAA5B,CAAF;AADzC,GAAP;AAGH,CAJD;;AAKA,eAAeP,OAAO,CAACiB,eAAD,EAAmBK,kBAAnB,CAAP,CAA8CvB,YAAY,CAACG,MAAD,EAASJ,KAAT,CAA1D,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Order from './Order/Order';\nimport axios from '../../Axios-instance';\nimport errorhandler from '../../hoc/errorhandler/errorhandling';\nimport {connect} from 'react-redux' \nimport  * as actions from '../../store/actions/index'\n\nclass Orders extends Component {\n    \n    componentDidMount() {\n        console.log(\"this is userid =============================================================\" , this.props.userId)\n        this.props.onFetchOrders(this.props.token , this.props.userId);\n    }\n\n    render () {\n        console.log(this.props.orders)\n        return (\n            <div>\n                {this.props.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading , \n         token :  state.auth.token , \n         userId : state.auth.userid\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token , userId ) => dispatch( actions.fetchOrders(token , userId) )\n    };\n};\nexport default connect(mapStateToProps , mapDispatchToProps)(errorhandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}